from datetime import datetime
import logging

from aiogram import Bot, Dispatcher, executor, types

#–±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –∫–Ω–æ–ø–æ–∫
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton

from aiogram.dispatcher import FSMContext #FSM
from aiogram.dispatcher.filters import Command #FSM
from aiogram.contrib.fsm_storage.memory import MemoryStorage   #FSM
from aiogram.dispatcher.filters.state import StatesGroup, State #FSM

from aiogram.utils.executor import start_webhook
import os

logging.basicConfig(level=logging.INFO)
storage = MemoryStorage() #FSM

TOKEN = '5705218954:AAGhWEtoNR6oLeZoYiXczF_NHydP91-zhzk'

bot= Bot(token=TOKEN, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot=bot, storage=storage)
admin_id = 394221139

#--HEROKU---------------------------------------------------------------------------------------------------
#https://newtechaudit.ru/asinhronnyj-telegram-bot-s-vebhukami-na-heroku/

HEROKU_APP_NAME = os.getenv('apr-test-bot') #–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å

# webhook settings
WEBHOOK_HOST = f'https://{HEROKU_APP_NAME}.herokuapp.com'
WEBHOOK_PATH = f'/webhook/{TOKEN}'
WEBHOOK_URL = f'{WEBHOOK_HOST}{WEBHOOK_PATH}'

# webserver settings
WEBAPP_HOST = '0.0.0.0'
WEBAPP_PORT = os.getenv('PORT',default=5000)

async def on_startup(dispatcher):
    await bot.set_webhook(WEBHOOK_URL, drop_pending_updates=True)

async def on_shutdown(dispatcher):
    await bot.delete_webhook()

#<<<<<<<<<  –ö–ù–û–ü–ö–ò  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
start = InlineKeyboardMarkup(row_width=1).add(InlineKeyboardButton('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='start'))

#—Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é
study = InlineKeyboardButton('üßë‚Äç‚öïÔ∏è –ë–ª–æ–∫: –û–±—É—á–µ–Ω–∏–µ –º–µ–¥–∏–∫–æ–≤', callback_data='study_med')
problems = InlineKeyboardButton('üìÉ –ë–ª–æ–∫: –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏', callback_data='problems_dok')
category = InlineKeyboardButton('üéì –ë–ª–æ–∫: –ö–∞—Ç–µ–≥–æ—Ä–∏—è', callback_data='category_dok')
question = InlineKeyboardButton('‚ùì –ë–ª–æ–∫: –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å', callback_data='your_quest')
menu = InlineKeyboardMarkup(row_width=1).add(study,problems,category,question)

#–ë–õ–û–ö 1: –û–±—É—á–µ–Ω–∏–µ –º–µ–¥–∏–∫–æ–≤  #–≥–æ—Ç–æ–≤
pk_btn = InlineKeyboardButton('–ë–ª–æ–∫: –ü–ö', callback_data='pk_med')
pp_btn = InlineKeyboardButton('–ë–ª–æ–∫: –ü–ü', callback_data='pp_med')
nmo_btn = InlineKeyboardButton('–ë–ª–æ–∫: –ù–ú–û', callback_data='nmo_med')
accre_btn = InlineKeyboardButton('–ë–ª–æ–∫: –ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è', callback_data='accred_med')
study_main_m = InlineKeyboardMarkup(row_width=1).add(pk_btn, pp_btn, nmo_btn, accre_btn)
#–ü–ö. –ø–æ–¥—Ä–∞–∑–¥–µ–ª. –î–ª—è —á–µ–≥–æ –ø—Ä–æ—Ö–æ–¥—è—Ç –ü–ö
for_accred = InlineKeyboardButton('–î–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏', callback_data='for_acc')
for_prodlen = InlineKeyboardButton('–° —Ü–µ–ª—å—é –ø—Ä–æ–¥–ª–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', callback_data='for_prod')
for_prosroch = InlineKeyboardButton('–£ –º–µ–Ω—è –ø—Ä–æ—Å—Ä–æ—á–µ–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', callback_data='for_pros')
for_menu = InlineKeyboardMarkup(row_width=1).add(for_accred, for_prodlen, for_prosroch)
#–ü–ü. –ø–æ–¥—Ä–∞–∑–¥–µ–ª. –î–ª—è —á–µ–≥–æ –ø—Ä–æ—Ö–æ–¥—è—Ç –ü–ü
pp_smp = InlineKeyboardButton('–°—Ä–µ–¥–Ω–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', callback_data='pp_smp_med')
pp_vmp = InlineKeyboardButton('–í—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', callback_data='pp_vmp_med')
pp_for_menu = InlineKeyboardMarkup(row_width=1).add(pp_smp, pp_vmp)
#–ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è. –ø–æ–¥—Ä–∞–∑–¥–µ–ª—ã
accred_btn_first = InlineKeyboardButton('–ü–µ—Ä–≤–∏—á–Ω–∞—è –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è', callback_data='first_accred')
accred_btn_reply = InlineKeyboardButton('–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è', callback_data='reply_accred')
accred_btn_spec_first = InlineKeyboardButton('–ü–µ—Ä–≤–∏—á–Ω–∞—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è', callback_data='spec_accred')
accred_menu = InlineKeyboardMarkup(row_width=1).add(accred_btn_first, accred_btn_reply,accred_btn_spec_first)

#–ë–õ–û–ö 2: –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
delay = InlineKeyboardButton('–ü—Ä–æ—Å—Ä–æ—á–µ–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?', callback_data='delay_sert')
foreign_dok = InlineKeyboardButton('–£ –º–µ–Ω—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?', callback_data='foreign')
pause_work = InlineKeyboardButton('–£ –º–µ–Ω—è –ø–µ—Ä–µ—Ä—ã–≤ –≤ —Å—Ç–∞–∂–µ. –ù–µ —Ä–∞–±–æ—Ç–∞–ª. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?', callback_data='pause')
not_end = InlineKeyboardButton('–ù–µ–æ–∫–æ–Ω—á–µ–Ω–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?', callback_data='not_edu')
problem_menu = InlineKeyboardMarkup(row_width=1).add(delay, foreign_dok, pause_work, not_end)
#–ü–æ–¥—Ä–∞–∑–¥–µ–ª –Ω–µ–æ–∫–æ–Ω—á–µ–Ω–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
no_ed_y_n = InlineKeyboardMarkup(row_width=2).add(InlineKeyboardButton('–î–∞, —è –ø–æ–ª—É—á–∏–ª(–∞) —Å–µ—Ä—Ç', callback_data='yes_sert'), 
InlineKeyboardButton('–ù–µ—Ç, –Ω–µ –ø–æ–ª—É—á–∞–ª(–∞)', callback_data='no_sert'))
ordinature = InlineKeyboardButton('–í—ã—Å—à–µ–µ - –∏–Ω—Ç–µ—Ä–Ω–∞—Ç—É—Ä–∞/–æ—Ä–¥–∏–Ω–∞—Ç—É—Ä–∞', callback_data='ordinat')
specialitet = InlineKeyboardButton('–í—ã—Å—à–µ–µ - —Å–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç', callback_data='specialit')
srednee = InlineKeyboardButton('–°—Ä–µ–¥–Ω–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ', callback_data='sred')
level_edu = InlineKeyboardMarkup(row_width=1).add(ordinature, specialitet, srednee)

#–ë–õ–û–ö 3: –ö–ê–¢–ï–ì–û–†–ò–ò
cat_yes = InlineKeyboardButton('–î–∞, –µ—Å—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—è', callback_data='cat_yes')
cat_no = InlineKeyboardButton('–ù–µ—Ç, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –∏–º–µ—é', callback_data='cat_no')
categ_y_n = InlineKeyboardMarkup(row_width=2).add(cat_yes, cat_no)
level_cat = InlineKeyboardMarkup(row_width=2).add(InlineKeyboardButton('–ü–µ—Ä–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è', callback_data='1_cat'), 
InlineKeyboardButton('–í—Ç–æ—Ä–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è', callback_data='2_cat'), 
InlineKeyboardButton('–í—ã—Å—à–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è', callback_data='3_cat'))
ex_work = InlineKeyboardMarkup(row_width=2).add(InlineKeyboardButton('–î–æ 3-–µ—Ö –ª–µ—Ç', callback_data='less_3'), 
InlineKeyboardButton('–ë–æ–ª–µ–µ 3-–µ—Ö –ª–µ—Ç', callback_data='more_3'))

#–î—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏

back = InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='go_back')
go_accred = InlineKeyboardButton('üîú –ü–µ—Ä–µ–π—Ç–∏ –≤ –±–ª–æ–∫ –ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏', callback_data='go_accred')
else_question = InlineKeyboardButton('‚ùì –í—Å–µ –µ—â–µ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã?', callback_data='else_question')
request_bnt_2 = InlineKeyboardButton('–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data='send_text')

end_btn = InlineKeyboardMarkup(row_width=2).add(back, else_question)
end_btn_2 = InlineKeyboardMarkup(row_width=2).add(back, go_accred, else_question)
end_btn_3 = InlineKeyboardMarkup(row_width=2).add(back, request_bnt_2)
end_btn_4 = InlineKeyboardMarkup(row_width=2).add(back)
request_bnt_3 = InlineKeyboardMarkup(row_width=2).add(request_bnt_2)
end_btn_5 = InlineKeyboardMarkup(row_width=2).add(back, delay)
end_btn_6= InlineKeyboardMarkup(row_width=2).add(back, delay, else_question)

#–∫–Ω–æ–ø–∫–∏-—Å—Å—ã–ª–∫–∏
rmapo_url = InlineKeyboardMarkup(row_width=1).add(back,InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ –†–ú–ê–ü–û', url='https://rmapo.ru/akkreditacija/pervichnaya-specializirovannaya-akkreditaciya/9551-pervichnaja-specializirovannaja-akkreditacija.html'))

#–ü–æ–¥—Å–∫–∞–∑–∫–∏
promp_1 = InlineKeyboardButton('–ì–¥–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–ª—ã –ù–ú–û?', callback_data='promp_1')

#–û—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ—é –∑–∞—è–≤–∫—É
request_bnt = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'))
contact = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('‚òéÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç', request_contact=True)) 

#<<<<<<<<<  –ü–ï–†–ï–ú–ï–ù–ù–´–ï –°–û–°–¢–û–Ø–ù–ò–Ø  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
class ProfilestatesGroup(StatesGroup):
    zapros = State()
    telefon = State()
    name = State()
    year = State()
    ball_250= State()
    ball_144= State()
    year_delay = State()
#<<<<<<<<<  –ê–õ–ì–û–†–ò–¢–ú  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

#–ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
HI = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –æ—Ç –£–¶ '–ê–∫–∞–¥–µ–º–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è'. \
    –ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤—Å—é –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–±—É—á–µ–Ω–∏—é –º–µ–¥–∏–∫–æ–≤. –û—Ç –ù–ú–û –¥–æ –ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏ \
    –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Ä–∞–±–æ—Ç–µ –Ω–∞–∂–º–∏—Ç–µ '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'"
@dp.message_handler(commands=['start'], state=None)
async def button_start_key(message: types.Message):
    await message.reply(text=HI, reply_markup=start)

#–†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ù–∞—á–∞—Ç—å, –≤—Å–ø–ª—ã—Ç–∏–µ –º–µ–Ω—é –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
MAIN_STAGES_TEXT = "–ö–∞–∫–æ–π —Ä–∞–∑–¥–µ–ª –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –ë–ª–æ–∫ –æ–±—É—á–µ–Ω–∏–µ –º–µ–¥–∏–∫–æ–≤: –ü–ö, –ü–ü, –ù–ú–û, –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è. \
    –ë–ª–æ–∫ –ø—Ä–æ–±–ª–µ–º —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏: –ø—Ä–æ—Å—Ä–æ—á–∫–∞, –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ –¥–æ–∫–∏, –ø–µ—Ä–µ—Ä—ã–≤ –≤ —Å—Ç–∞–∂–µ. \
    –ë–ª–æ–∫ –ö–∞—Ç–µ–≥–æ—Ä–∏—è. –ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å - –º—ã –≤–∞–º –æ—Ç–≤–µ—Ç–∏–º"
@dp.callback_query_handler(text = "start")
async def main_stage(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, text=MAIN_STAGES_TEXT, reply_markup=menu)

#—Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ —Ä–∞–∑–¥–µ–ª–∞
YES_QUESTION = '–ï—Å–ª–∏ —É –≤–∞—Å –≤—Å–µ –µ—â–µ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∏ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç'
@dp.callback_query_handler(text = "else_question")
async def ent_answer(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)    
    await bot.send_message(callback_query.from_user.id, text=YES_QUESTION, reply_markup=end_btn_3)

#–ë–õ–û–ö 1. –û–ë–£–ß–ï–ù–ò–ï –ú–ï–î–ò–ö–û–í----------------------------------------------------------------------------------------------------------
#–†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–ë–ª–æ–∫: –û–±—É—á–µ–Ω–∏–µ –º–µ–¥–∏–∫–æ–≤', –≤—Å–ø–ª—ã—Ç–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–æ–≤
@dp.callback_query_handler(text="study_med")
async def study_menu(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–ß—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç: –ü–ü, –ü–ö, –ù–ú–û, –∞–∫—Ä—Ä–µ–¥–∏—Ç–∞—Ü–∏—è?', reply_markup=study_main_m)

#–†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ä–∞–∑–¥–µ–ª '–ü–ö', –≤—Å–ø–ª—ã—Ç–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–æ–≤
@dp.callback_query_handler(text="pk_med")
async def pk_menu(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–° –∫–∞–∫–æ–π —Ü–µ–ª—å—é —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ –æ–±—É—á–µ–Ω–∏–µ?', reply_markup=for_menu)     # —Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–∫—Å—Ç + –∫–Ω–æ–ø–∫–∏
#—Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª—ã –º–µ–Ω—é –ü–ö
@dp.callback_query_handler(text="for_acc")
async def for_accreditation(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–í–∞–º –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª –∞–∫–∫—Ä–µ–¥. –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∞–∫–∫—Ä–µ–¥', reply_markup=end_btn_2)   
@dp.callback_query_handler(text="for_prod")
async def for_prodlenie(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–ö–∞–∫–æ–π-—Ç–æ –∏–Ω—Ñ–æ —Ç–µ–∫—Å—Ç –ø—Ä–æ –ü–†–û–î–õ–ï–ù–ò–ï. –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∞–∫–∫—Ä–µ–¥', reply_markup=end_btn_2) 
@dp.callback_query_handler(text="for_pros")
async def for_prosrochki(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–ö–∞–∫–æ–π-—Ç–æ –∏–Ω—Ñ–æ —Ç–µ–∫—Å—Ç –¥–ª—è –ü–†–û–°–†–û–ß–ö–ò —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ ', reply_markup=end_btn_5)   

#–†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ä–∞–∑–¥–µ–ª '–ü–ü', –≤—Å–ø–ª—ã—Ç–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–æ–≤
@dp.callback_query_handler(text="pp_med")
async def pp_menu(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–í–∞—à —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è?', reply_markup=pp_for_menu)  
#—Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª—ã –º–µ–Ω—é –ü–ü
INFO_TEXT_1 = '–ò–Ω—Ñ–æ —Ç–µ–∫—Å—Ç –ø—Ä–æ —Ç–æ, –∫–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞–∫—É—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ—É—á–∏—Ç—Å—è. –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–∫–∞–∑: https://docs.cntd.ru/document/420339191'
INFO_TEXT_2 = '–ò–Ω—Ñ–æ —Ç–µ–∫—Å—Ç –ø—Ä–æ —Ç–æ, –∫–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞–∫—É—é —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ—É—á–∏—Ç—Å—è. –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–∫–∞–∑: http://ivo.garant.ru/#/document/71231064/paragraph/13:0'
@dp.callback_query_handler(text="pp_smp_med")
async def otv_smp(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text=INFO_TEXT_1, reply_markup=end_btn) 
@dp.callback_query_handler(text="pp_vmp_med")
async def otv_vmp(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text=INFO_TEXT_2, reply_markup=end_btn) 

#—Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –ë–ª–æ–∫: –ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è, –≤—Å–ø–ª—ã—Ç–∏–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–æ–≤
INFO_TEXT_3 = '–û–ø–∏—Å–∞–Ω–∏–µ —á—Ç–æ —Ç–∞–∫–æ–µ –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è. –í –∫–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –∫–∞–∫—É—é –Ω–∞–¥–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å. –ò –∫–æ–Ω–µ—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å: –ö–∞–∫–∞—è –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?'
INFO_TEXT_5 = '–∫–∞–∫–æ–π-—Ç–æ —Ç–∞–º –∏–Ω—Ñ–æ —Ç–µ–∫—Å—Ç –ø—Ä–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. \
    –ü–æ–ª–µ–∑–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç –†–ú–ê–ü–û:https://rmapo.ru/akkreditacija/pervichnaya-specializirovannaya-akkreditaciya/9551-pervichnaja-specializirovannaja-akkreditacija.html'
@dp.callback_query_handler(text='accred_med')
async def accreditation(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text=INFO_TEXT_3, reply_markup=accred_menu) 
#—Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª—ã –º–µ–Ω—é –ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏
INFO_TEXT_4='–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–æ —É—á–µ–±–Ω–æ–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ, –≥–¥–µ –±—ã–ª–æ –ø–æ–ª—É—á–µ–Ω–æ –±–∞–∑–æ–≤–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (–∫–æ–ª–ª–µ–¥–∂ / —Å–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç)'
@dp.callback_query_handler(text="first_accred")
async def otv_first_ac(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text=INFO_TEXT_4, reply_markup=end_btn) 
@dp.callback_query_handler(text="reply_accred")
async def otv_rep_acc(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,text='–ö–∞–∫–æ–π-—Ç–æ –∏–Ω—Ñ–æ —Ç–µ–∫—Å—Ç –ø—Ä–æ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω—ã –±–∞–ª–ª—ã', reply_markup=calculate_nmo)  

@dp.callback_query_handler(text="spec_accred")
async def otv_first_spec_ac(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text=INFO_TEXT_5, reply_markup=rmapo_url)
#–ë–õ–û–ö. –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –±–∞–ª–ª–æ–≤ –ù–ú–û----------------------------------------------------------------------------------------------------
#–∫–Ω–æ–ø–∫–∏
calk_nmo = InlineKeyboardButton('üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –±–∞–ª–ª–æ–≤', callback_data='calculate_nmo')
calculate_nmo = InlineKeyboardMarkup(row_width=2).add(calk_nmo)
one_more= InlineKeyboardMarkup(row_width=2).add(calk_nmo, back)

before_mart = InlineKeyboardButton('–í—ã–¥–∞–Ω –¥–æ –º–∞—Ä—Ç–∞: —è–Ω–≤–∞—Ä—å, —Ñ–µ–≤—Ä–∞–ª—å', callback_data='b_mart')
after_mart = InlineKeyboardButton('–í—ã–¥–∞–Ω –ø–æ—Å–ª–µ –º–∞—Ä—Ç–∞: –º–∞—Ä—Ç-–¥–µ–∫–∞–±—Ä—å', callback_data='a_mart')
mart = InlineKeyboardMarkup(row_width=1).add(before_mart, after_mart)
yes = InlineKeyboardButton('–î–∞, –∫–æ–ø–∏–ª(–∞)', callback_data='yes')
no = InlineKeyboardButton('–ù–µ—Ç, –Ω–µ –∫–æ–ø–∏–ª(–∞)', callback_data='no')
yes_no = InlineKeyboardMarkup(row_width=2).add(yes, no, promp_1)
yes_2 = InlineKeyboardButton('–î–∞, –∫–æ–ø–∏–ª(–∞)', callback_data='yes_2')
no_2 = InlineKeyboardButton('–ù–µ—Ç, –Ω–µ –∫–æ–ø–∏–ª(–∞)', callback_data='no_2')
yes_no_2 = InlineKeyboardMarkup(row_width=2).add(yes_2, no_2, promp_1)

#—Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –ë–ª–æ–∫: –ù–ú–û
@dp.callback_query_handler(text="nmo_med")
async def nmo(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,text='–ß—Ç–æ —Ç–∞–∫–æ–µ –ù–ú–û –∏ —Å —á–µ–º –µ–≥–æ –µ–¥—è—Ç.–î–∞–ª–µ–µ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É', reply_markup=calculate_nmo)
@dp.callback_query_handler(text="calculate_nmo")
async def nmo1(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, text='–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞?')
    await ProfilestatesGroup.year.set()
#—Å–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ –º–∞—Ä—Ç
@dp.message_handler(state=ProfilestatesGroup.year)
async def spec(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['year']=int(message.text)
    num_y = 5 + data['year'] #–≥–æ–¥, –∫–æ–≥–¥–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —Å–µ—Ä—Ç —É –∫–ª–∏–µ–Ω—Ç–∞
    start_year = datetime.now().year - 5 #–≥–æ–¥ –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ–¥ –ø—Ä–æ—Å—Ä–æ—á–∫–æ–π
    if data['year'] < start_year:
        await message.answer('–í–∞—à —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É–∂–µ –ø—Ä–æ—Å—Ä–æ—á–∏–ª—Å—è. –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –µ–≥–æ –ø—Ä–æ–¥–ª–∏—Ç—å', reply_markup=end_btn_6)
    else:
        if num_y <= 2023:
            await message.answer('–ú–µ—Å—è—Ü –≤—ã–¥–∞—á–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: –¥–æ –º–∞—Ä—Ç–∞ –∏–ª–∏ –ø–æ—Å–ª–µ?', reply_markup=mart)
        else:
            await message.answer('–ö–æ–ø–∏–ª–∏ –ª–∏ –≤—ã –±–∞–ª–ª—ã –ù–ú–û?', reply_markup=yes_no_2)
    await state.finish()

#–æ—Ç–≤–µ—Ç—ã –ø—Ä–æ –º–∞—Ä—Ç. –î–û
@dp.callback_query_handler(text=("b_mart"))
async def nmo2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,text='–ö–æ–ø–∏–ª–∏ –ª–∏ –≤—ã –±–∞–ª–ª—ã –ù–ú–û?', reply_markup=yes_no)
#–î–∞, –∫–æ–ø–∏–ª–∏ –±–∞–ª–ª—ã –ø—Ä–æ 144—á
@dp.callback_query_handler(text="yes")
async def nmo3(callback_query: types.CallbackQuery, state: FSMContext):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,text='–°–∫–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤ –±—ã–ª–æ –Ω–∞–±—Ä–∞–Ω–æ?')
    await ProfilestatesGroup.ball_144.set()
#—Å—á–∏—Ç–∞–µ–º –±–∞–ª–ª—ã
@dp.message_handler(state=ProfilestatesGroup.ball_144)
async def nmo4(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['ball_144']=int(message.text) 
    if data['ball_144'] >= 144:
        await message.answer('–í—ã –Ω–∞–±—Ä–∞–ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏', reply_markup=end_btn)
    else:
        num4= 144 - data['ball_144']
        await message.answer(f'–í–∞–º –æ—Å—Ç–∞–ª–æ—Å—å –Ω–∞–±—Ä–∞—Ç—å {num4} –±–∞–ª–ª(–∞/–æ–≤) –¥–æ 144—á')
    await state.finish()
    await message.answer('–ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ—Å—á–∏—Ç–∞—Ç—å –±–∞–ª–ª—ã?', reply_markup=one_more)
#–ù–µ—Ç, –Ω–µ –∫–æ–ø–∏–ª–∏
@dp.callback_query_handler(text="no")
async def nmo5(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, text='–¢–æ–≥–¥–∞ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ –ø–∫ –Ω–∞ 144—á', reply_markup=end_btn)

#–æ—Ç–≤–µ—Ç—ã –ø—Ä–æ –º–∞—Ä—Ç. –ü–û–°–õ–ï
@dp.callback_query_handler(text=("a_mart"))
async def nmo2_1(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,text='–ö–æ–ø–∏–ª–∏ –ª–∏ –≤—ã –±–∞–ª–ª—ã –ù–ú–û?', reply_markup=yes_no_2)
#–î–∞, –∫–æ–ø–∏–ª–∏ –±–∞–ª–ª—ã –ø—Ä–æ 250—á
@dp.callback_query_handler(text="yes_2")
async def nmo7(callback_query: types.CallbackQuery, state: FSMContext):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,text='–°–∫–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤ –≤—ã –Ω–∞–±—Ä–∞–ª–∏?') #—Ä–∞–∑–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤–∫–∏!
    await ProfilestatesGroup.ball_250.set()
#—Å—á–∏—Ç–∞–µ–º –±–∞–ª–ª—ã
@dp.message_handler(state=ProfilestatesGroup.ball_250)
async def nmo8(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['ball_250']=int(message.text) 
    if data['ball_250'] >= 250:
        await message.answer ('–í—ã –Ω–∞–±—Ä–∞–ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤', reply_markup=end_btn)
    else:
        num5 = 250 - data['ball_250']
        await message.answer(f'–í–∞–º –æ—Å—Ç–∞–ª–æ—Å—å –Ω–∞–±—Ä–∞—Ç—å {num5} –±–∞–ª–ª(–∞/–æ–≤) –¥–æ 250—á')
    await state.finish()
    await message.answer('–ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ—Å—á–∏—Ç–∞—Ç—å –±–∞–ª–ª—ã?', reply_markup=one_more)
#–ù–µ—Ç, –Ω–µ –∫–æ–ø–∏–ª–∏
@dp.callback_query_handler(text="no_2")
async def nmo9(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, text='–ù—É–∂–Ω–æ –∫–æ–ø–∏—Ç—å. –í–æ—Ç —Ç–µ–±–µ –∏–Ω—Ñ–æ.... ', reply_markup=end_btn)

#–ë–õ–û–ö 2. –ü–†–û–ë–õ–ï–ú–´ –° –î–û–ö–£–ú–ï–ù–¢–ê–ú–ò---------------------------------------------------------------------------------------------------
#—Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –±–ª–æ–∫
@dp.callback_query_handler(text='problems_dok')
async def problem_btn(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–ö–∞–∫–∞—è —É –≤–∞—Å –ø—Ä–æ–±–ª–µ–º–∞?', reply_markup=problem_menu) 
#—Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –ø—Ä–æ—Å—Ä–æ—á–∫—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ -- —Ç–æ–∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ –ø–µ—Ä–µ—Ä—ã–≤ –≤ —Å—Ç–∞–∂–µ ???
@dp.callback_query_handler(text='delay_sert')
async def delay_sert_btn(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–í–æ—Ç —Ç—É—Ç –Ω–∞–¥–æ —á—Ç–æ-—Ç–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å. –£ –º–µ–Ω—è —Å—Ç–æ–∏—Ç –∞–ª–≥–æ—Ä–∏—Ç–º –Ω–∞ –ø—Ä–æ—Å—á–µ—Ç –¥–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∞, –Ω–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ –∑–∞—á–µ–º –æ–Ω', reply_markup=end_btn_2) #–ü–ï–†–ï–•–û–î –ù–ê –ê–ö–ö–†–ï–î–ò–¢–ê–¶–ò–Æ
#—Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
@dp.callback_query_handler(text='foreign')
async def foreign_btn(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–ó–¥–µ—Å—å –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –Ω–∞–¥–æ –¥–µ–ª–∞—Ç—å –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç. –ù–µ –Ω–∞—à–ª–∞ –µ–µ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ', reply_markup=end_btn)

#—Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–µ–æ–∫–æ–Ω—á–µ–Ω–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
@dp.callback_query_handler(text='not_edu')
async def not_edu_btn(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–ï—Å—Ç—å –ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏–ª–∏ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –Ω–∞ —Ä—É–∫–∞—Ö?', reply_markup=no_ed_y_n)
#—Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª. –î–ê
@dp.callback_query_handler(text='yes_sert')
async def not_btn1(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–ö–∞–∫–æ–π —É –≤–∞—Å —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è?', reply_markup=level_edu)      
#—Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª –ø–æ—Å–ª–µ –¥–∞. –≤—ã—Å—à–µ–µ –∏ —Å—Ä–µ–¥–Ω–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
@dp.callback_query_handler(text=('ordinat','sred'))
async def not_btn2(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–£ –≤–∞—Å –Ω–∞ —Ä—É–∫–∞—Ö –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∏–ª–∏ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ª—é–±–æ–µ –æ–±—É—á–µ–Ω–∏–µ', reply_markup=end_btn)     
#—Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª –ø–æ—Å–ª–µ –¥–∞. —Å–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç –≤—ã—Å—à–µ–µ + –æ—Ç–≤–µ—Ç –Ω–µ—Ç
@dp.callback_query_handler(text=('no_sert','specialit'))
async def not_btn3(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Ç–æ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ, –≥–¥–µ –≤—ã –∑–∞–∫–∞–Ω—á–∏–≤–∞–ª–∏ –æ–±—É—á–µ–Ω–∏–µ', reply_markup=end_btn)  

#—Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –ø–µ—Ä–µ—Ä—ã–≤ –≤ —Å—Ç–∞–∂–µ –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–† –ü–ï–†–ï–†–´–í–ê-------------------------------------------------------------------------------------------------------------------
#–∫–Ω–æ–ø–∫–∏
y_n_3= InlineKeyboardMarkup(row_width=2).add(InlineKeyboardButton('–î–∞, —Ä–∞–±–æ—Ç–∞–ª(–∞)', callback_data='y_work'), 
InlineKeyboardButton('–ù–µ—Ç, –Ω–µ —Ä–∞–±–æ—Ç–∞–ª(–∞)', callback_data='n_work'))

@dp.callback_query_handler(text=('pause','delay_sert'))
async def pause_bnt(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, text='–£–∫–∞–∂–∏—Ç–µ –≥–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞')
    await ProfilestatesGroup.year_delay.set()

#—Å–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ —Å—Ç–∞–∂
@dp.message_handler(state=ProfilestatesGroup.year_delay)
async def year_del(message: types.Message, state: FSMContext):
    async with state.proxy() as delay_sert_1:
        delay_sert_1['year_delay']=int(message.text)
    pause_year = delay_sert_1['year_delay'] + 10 
    if pause_year < datetime.now().year:
        await message.answer('–í–∞–º –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –ü–ü –∏ –ø–æ–π—Ç–∏ –Ω–∞ –ü–µ—Ä–≤–∏—á–Ω—É—é –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—é', reply_markup=end_btn_2)
    else:
        await message.answer('–†–∞–±–æ—Ç–∞–ª–∏ –ª–∏ –≤—ã –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ª–µ—Ç?', reply_markup=y_n_3)
    await state.finish()
#–¥–∞–ª–µ–µ –ø—Ä–æ —Å—Ç–∞–∂ YES
@dp.callback_query_handler(text="y_work")
async def stazh(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–í–∞–º –Ω—É–∂–Ω–æ –ø–æ–¥–∞–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—é', reply_markup=end_btn_2) 
#–¥–∞–ª–µ–µ –ø—Ä–æ —Å—Ç–∞–∂ NO
@dp.callback_query_handler(text="n_work")
async def stazh2(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–í–∞–º –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –ü–ü –∏ –ø–æ–π—Ç–∏ –Ω–∞ –ü–µ—Ä–≤–∏—á–Ω—É—é –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—é', reply_markup=end_btn_2) 

#–ë–õ–û–ö 3. –ö–ê–¢–ï–ì–û–†–ò–Ø-----------------------------------------------------------------------------------------------------------------
@dp.callback_query_handler(text="category_dok")
async def cat(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —É–∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è', reply_markup=categ_y_n)
#–ö–∞—Ç–µ–≥–æ—Ä–∏—è - –î–ê
@dp.callback_query_handler(text="cat_yes")
async def cat1(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–ö–∞–∫–∞—è —É –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è?', reply_markup=level_cat)
#–ü–æ–¥—Ä–∞–∑–¥–µ–ª—ã —É—Ä–æ–≤–Ω—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
@dp.callback_query_handler(text=("1_cat", "2_cat"))
async def cat5(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤—ã—à–µ –Ω—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å –ø–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∏–º–µ—Ç—å —Å—Ç–∞–∂ –±–æ–ª–µ–µ 3 –ª–µ—Ç –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏', reply_markup=end_btn)
@dp.callback_query_handler(text="3_cat")
async def cat6(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–°–µ–π—á–∞—Å –º–æ—Ä–∞—Ç–æ—Ä–∏–π –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ/–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –ú–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ–Ω–∏–∑–∏—Ç—å –Ω–∞ —Å—Ç—É–ø–µ–Ω—å', reply_markup=end_btn)
#–ö–∞—Ç–µ–≥–æ—Ä–∏—è - –ù–ï–¢
@dp.callback_query_handler(text="cat_no")
async def cat2(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–°–∫–æ–ª—å–∫–æ –ª–µ—Ç —Å—Ç–∞–∂–∞?', reply_markup=ex_work)
#–ü–æ–¥—Ä–∞–∑–¥–µ–ª—ã —Å—Ç–∞–∂–∞
@dp.callback_query_handler(text="less_3")
async def stazh_btn(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–°–µ–π—á–∞—Å –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å —Å—Ç–∞–∂ –±–æ–ª–µ–µ 3-–µ—Ö –ª–µ—Ç –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏', reply_markup=end_btn)
@dp.callback_query_handler(text="more_3")
async def stazh_btn1(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text='–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—Ç–æ—Ä—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: ...', reply_markup=end_btn)

#–ë–õ–û–ö - –í–ï–†–ù–£–¢–¨–°–Ø –í –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ--------------------------------------------------------------------------------------------------------
@dp.callback_query_handler(text="go_back")
async def Back(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text=MAIN_STAGES_TEXT, reply_markup=menu)

@dp.message_handler(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
async def back_2(message: types.Message):
    await message.answer(text=MAIN_STAGES_TEXT, reply_markup=menu)

#–ë–õ–û–ö - –ü–ï–†–ï–ô–¢–ò –ö –ê–ö–ö–†–ï–î–ò–¢–ê–¶–ò–ò------------------------------------------------------------------------------------------------------------------
@dp.callback_query_handler(text="go_accred")
async def accred_go(callback_query: types.CallbackQuery):
    await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, 
    text=INFO_TEXT_3, reply_markup=accred_menu)

#–ë–õ–û–ö - –û–°–¢–ê–í–ò–¢–¨ –ó–ê–Ø–í–ö–£ - –î–ê ---------------------------------------------------------------------------------------------------------
@dp.callback_query_handler(text = ("send_text", "your_quest"))
async def zvk(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,text='–í–≤–µ–¥–∏—Ç–µ –ò–º—è')
    await ProfilestatesGroup.name.set()

@dp.message_handler(state=ProfilestatesGroup.name)
async def name_test(message: types.Message, state: FSMContext):
    async with state.proxy() as ZPR: #–æ—Ç–∫—Ä—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
        ZPR['name']=message.text #—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
    answer = '–í–∞—à –ó–∞–ø—Ä–æ—Å'
    await bot.send_message(message.from_user.id, answer)
    await ProfilestatesGroup.zapros.set()

@dp.message_handler(state=ProfilestatesGroup.zapros)
async def zapros_info(message: types.Message, state: FSMContext):
    async with state.proxy() as ZPR: #–æ—Ç–∫—Ä—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
        ZPR['info']=message.text #—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
    answer = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏. –î–ª—è —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É'
    await bot.send_message(message.from_user.id, answer, reply_markup=contact)
    await ProfilestatesGroup.telefon.set()
  

@dp.message_handler(content_types=['contact'], state=ProfilestatesGroup.telefon)
async def tel(message: types.Message, state: FSMContext):    
    async with state.proxy() as ZPR: #–æ—Ç–∫—Ä—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
        ZPR['number']=message.text #—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞   
    await bot.send_message(admin_id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.full_name} \n \n'
                                f'–ö–∞–∫ –æ–±—Ä–∞—â–∞—Ç—å—Å—è: {ZPR["name"]} \n \n'
                                f'–¢–µ–ª–µ—Ñ–æ–Ω: {message.contact.phone_number} \n \n'
                                f'–ó–∞–ø—Ä–æ—Å: {ZPR["info"]} \n \n')
    await message.answer(text="‚úî –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É. –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –º–µ–Ω–µ–¥–∂–µ—Ä —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è", reply_markup=ReplyKeyboardRemove())
    await message.answer(text="–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=end_btn_4)  
    await state.finish()

#<<<<<<<<<  –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–û–ï –ú–ï–ù–Æ   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–µ –º–µ–Ω—é
@dp.message_handler(commands=['menu'])
async def my_commands_3(message: types.Message):
    await message.answer(text=MAIN_STAGES_TEXT, reply_markup=menu)
@dp.message_handler(commands=['call'])
async def my_commands(message: types.Message):
    await message.answer(text='–ï—Å–ª–∏ –≤—ã –Ω–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', reply_markup=request_bnt_3)
@dp.message_handler(commands=['info'])
async def my_commands_2(message: types.Message):
    await message.answer(text='–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ —Ç–µ–∫—Å—Ç –ø—Ä–æ –£–¶ –ê–ü–† —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –Ω–æ–º–µ—Ä–æ–º –ª–∏—Ü–µ–Ω–∑–∏–∏ –∏ —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Å–∞–π—Ç', reply_markup=end_btn_4)

#–ü–û–î–°–ö–ê–ó–ö–ò
@dp.callback_query_handler(text='promp_1')
async def pr_1(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id, text='–ó–¥–µ—Å—å –∏–Ω—Ñ–æ —Ç–µ–∫—Å—Ç –ø—Ä–æ —Ç–æ –≥–¥–µ –∏–º–µ–Ω–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤ –ù–ú–û', show_alert=True)
#<<<<<<<<<  –ö–û–ù–ï–¶   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

#–∑–∞–ø—É—Å–∫ —Ä–∞–±–æ—Ç—ã
if __name__ == '__main__':
    executor.start_polling(dp) #–¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞

    logging.basicConfig(level=logging.INFO)
    start_webhook(
        dispatcher=dp,
        webhook_path=WEBHOOK_PATH,
        skip_updates=True,
        on_startup=on_startup,
        on_shutdown=on_shutdown,
        host=WEBAPP_HOST,
        port=WEBAPP_PORT,
        )